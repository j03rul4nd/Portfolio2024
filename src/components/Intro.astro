---
---

<section class="mb-8">
  <div class="mb-6">
    <h1
      class="font-bold uppercase text-center text-4xl md:text-5xl xtracking-tighter py-6 overflow-hidden"
    >
      <span
        class="bg-gradient-to-br from-[#334155] via-[#1e293b] to-[#0f172a] dark:from-primary-main dark:via-primary-main dark:to-primary-main bg-clip-text text-transparent"
      >
        Joel Benitez
      </span>
    </h1>
    <div
      class="border-b-[1px] border-t-[1px] border-current py-1 flex items-center justify-center gap-1"
    >
      <a
        class="unset ml-4 hover:text-text-link"
        href="https://github.com/j03rul4nd"
      >
        <i class="fa-brands fa-github" aria-hidden="true" title="Joel Benitez Software Developer on GitHub"></i>
        <span>GitHub</span>
      </a>
      <a
        data-popover-target="popover-user-profile"
        class="unset ml-4 hover:text-text-link"
        href="https://www.linkedin.com/in/joel-benitez-iiot-industry/"
      >
        <i class="fa-brands fa-linkedin" aria-hidden="true" title="Joel Benitez Software Developer on Linkedin"></i>
        <style>
          .fa-linkedin::before{
            content: '\f08c';
          }
        </style>
        <span>Linkedin</span>
      </a>


      

<div data-popover id="popover-user-profile" role="tooltip" class="absolute z-10 invisible inline-block w-64 text-sm text-gray-500 transition-opacity duration-300 bg-white border border-gray-200 rounded-lg shadow-sm opacity-0 dark:text-gray-400 dark:bg-gray-800 dark:border-gray-600">
    <div class="p-3">
        <div class="flex items-center justify-between mb-2">
            <a style="background-image: none;" href="https://www.linkedin.com/in/joel-benitez-iiot-industry/">
                <img class="w-10 h-10 rounded-full" src="/images/aboutMe/profile.jpg" alt="Joel Benitez Linkedin">
            </a>
            <div>
              <a  style="background-image: none;" href="https://www.linkedin.com/in/joel-benitez-iiot-industry/">
                <button type="button" class="text-white bg-blue-700 hover:bg-blue-800 focus:ring-4 focus:ring-blue-300 font-medium rounded-lg text-xs px-3 py-1.5 dark:bg-blue-600 dark:hover:bg-blue-700 focus:outline-none dark:focus:ring-blue-800">Follow</button>
              </a>
            </div>
        </div>
        <p class="text-base font-semibold leading-none text-gray-900 dark:text-white">
            <a style="background-image: none;" href="https://www.linkedin.com/in/joel-benitez-iiot-industry/">Joel Benitez</a>
        </p>
        <p class="mb-3 text-sm font-normal">
            <a style="background-image: none;" href="https://www.linkedin.com/in/joel-benitez-iiot-industry/" class="hover:underline">@JoelBenitez</a>
        </p>
        <p class="mb-4 text-sm">More about me on <a href="https://www.linkedin.com/in/joel-benitez-iiot-industry/" class="text-blue-600 dark:text-blue-500 hover:underline">linkedin</a>.</p>
        <ul class="flex text-sm">
            <!-- <li class="me-2">
                <a href="#" class="hover:underline">
                    <span class="font-semibold text-gray-900 dark:text-white">799</span>
                    <span>Following</span>
                </a>
            </li> -->
            <li>
                <a style="background-image: none;" href="https://www.linkedin.com/in/joel-benitez-iiot-industry/" class="hover:underline">
                    <span class="font-semibold text-gray-900 dark:text-white">8,487</span>
                    <span>Followers</span>
                </a>
            </li>
        </ul>
    </div>
    <div data-popper-arrow></div>
</div>







    </div>
    <!-- <p class="text-2xl pb-4">Web Developer. OSS Wizard. Blogger.</p> -->
  </div>
  <div>
    <p class="mb-8">
      Experienced Software Developer specializing in web development, IIoT, GIS, and WebGL. Over +2 years, I've delivered innovative solutions, excelling in dynamic environments. Explore my impactful projects below.
    </p>
    <p class="text-center whitespace-nowrap overflow-auto currentcntrjob">

      <span class="bg-purple-100 text-purple-800 text-xl font-medium me-2 px-2.5 py-0.5 rounded-full dark:bg-purple-900 dark:text-purple-300" style="cursor: default">current</span>
      <span
       style="border-color: rgb(var(--color-text-link) / 1);"
       class="relative select-none items-center whitespace-nowrap rounded-full border py-1.5 px-3 font-sans text-xs font-bold uppercas"
      >
        <span
         class="relative  select-none items-center whitespace-nowrap rounded-lg py-1.5 px-3 unset gradient-link tracking-wider font-bold bg-clip-text text-transparent bg-gradient-to-r from-[#00abda] to-[#1476ff] hover:after:bg-gradient-to-r hover:after:from-[#00abda] hover:after:to-[#1476ff]"
        >
          <span >
            <span>R&D Developer at</span> 
            <a 
            href="https://becolve.com/"
            class="unset hover:text-text-link"
            target="_blank"
            >
              <span>Becolve Digital</span>
            </a>
        
          </span>
      
        </span>
      </span>
    </p>
  </div>
</section>
<div id="Three_Component_Header_particles"></div>
<hr class="w-48 h-1 mx-auto my-4 bg-gray-100 border-0 rounded md:my-10 dark:bg-gray-700">

<style>
  main{
    position: relative;
  }
  div#Three_Component_Header_particles {
    display: block;
    z-index: -2;
    position: absolute;
    left: 0;
    top: 0;
    width: 100%;
    height: 534px;
    background: linear-gradient(to bottom, rgba(255, 255, 255, 0.5) 0%, rgba(255, 255, 255, 0) 100%);
    opacity: 0.2;
}
  .currentcntrjob{
    display: flex;
    gap: 1rem;
    flex-direction: column;
    align-items: center;
    justify-content: center;
  }
</style>
<script>
  import * as THREE from "three";
import { OrbitControls } from 'three/examples/jsm/controls/OrbitControls';

// shaders
let vertexshader = `
attribute float scale;

void main() {

  vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );

  gl_PointSize = scale * ( 300.0 / - mvPosition.z );

  gl_Position = projectionMatrix * mvPosition;

}
`;
let fragmentshader = `

uniform vec3 color;

void main() {

  if ( length( gl_PointCoord - vec2( 0.5, 0.5 ) ) > 0.475 ) discard;

  gl_FragColor = vec4( color, 1.0 );

}

`;

const SEPARATION = 100, AMOUNTX = 50, AMOUNTY = 50;

let container;
let camera, scene, renderer;

let particles, count = 0;

let mouseX = 0, mouseY = 0;

let windowHalfX = window.innerWidth / 2;
let windowHalfY = window.innerHeight / 2;

init();
animate();

function init() {

  const divIdentificator = document.getElementById("Three_Component_Header_particles");
  container = document.createElement( 'div' );
  divIdentificator.appendChild( container );

  camera = new THREE.PerspectiveCamera( 75, window.innerWidth / window.innerHeight, 1, 10000 );
  camera.position.z = 1000;

  scene = new THREE.Scene();

  //

  const numParticles = AMOUNTX * AMOUNTY;

  const positions = new Float32Array( numParticles * 3 );
  const scales = new Float32Array( numParticles );

  let i = 0, j = 0;

  for ( let ix = 0; ix < AMOUNTX; ix ++ ) {

    for ( let iy = 0; iy < AMOUNTY; iy ++ ) {

      positions[ i ] = ix * SEPARATION - ( ( AMOUNTX * SEPARATION ) / 2 ); // x
      positions[ i + 1 ] = 0; // y
      positions[ i + 2 ] = iy * SEPARATION - ( ( AMOUNTY * SEPARATION ) / 2 ); // z

      scales[ j ] = 1;

      i += 3;
      j ++;

    }

  }

  const geometry = new THREE.BufferGeometry();
  geometry.setAttribute( 'position', new THREE.BufferAttribute( positions, 3 ) );
  geometry.setAttribute( 'scale', new THREE.BufferAttribute( scales, 1 ) );

  const material = new THREE.ShaderMaterial( {

    uniforms: {
      color: { value: new THREE.Color( 0x000000 ) },//0xffffff
    },
    vertexShader: vertexshader,
    fragmentShader: fragmentshader, 
    transparent: true,

  } );

  //

  particles = new THREE.Points( geometry, material );
  scene.add( particles );

  //

  renderer = new THREE.WebGLRenderer({ antialias: true, alpha: true }); // Habilitar canal alfa
  renderer.setPixelRatio( window.devicePixelRatio );
  renderer.setSize( window.innerWidth, window.innerHeight );
  container.appendChild( renderer.domElement );


  container.style.touchAction = 'none';
  container.addEventListener( 'pointermove', onPointerMove );

  //

  window.addEventListener( 'resize', onWindowResize );

  onWindowResize();
}



function onWindowResize() {
  const divIdentificator = document.getElementById("Three_Component_Header_particles");

  windowHalfX = divIdentificator.offsetWidth / 2;
  windowHalfY = divIdentificator.offsetHeight / 2;

  camera.aspect = divIdentificator.offsetWidth / divIdentificator.offsetHeight;
  camera.updateProjectionMatrix();

  renderer.setSize(divIdentificator.offsetWidth, divIdentificator.offsetHeight);
}


//

function onPointerMove( event ) {

  if ( event.isPrimary === false ) return;

  mouseX = event.clientX - windowHalfX;
  mouseY = event.clientY - windowHalfY;

}

//

function animate() {

  requestAnimationFrame( animate );

  render();

}

function render() {

  camera.position.x += ( mouseX - camera.position.x ) * .05;
  camera.position.y += ( - mouseY - camera.position.y ) * .05;
  camera.lookAt( scene.position );

  const positions = particles.geometry.attributes.position.array;
  const scales = particles.geometry.attributes.scale.array;

  let i = 0, j = 0;

  for ( let ix = 0; ix < AMOUNTX; ix ++ ) {

    for ( let iy = 0; iy < AMOUNTY; iy ++ ) {

      positions[ i + 1 ] = ( Math.sin( ( ix + count ) * 0.3 ) * 50 ) +
              ( Math.sin( ( iy + count ) * 0.5 ) * 50 );

      scales[ j ] = ( Math.sin( ( ix + count ) * 0.3 ) + 1 ) * 20 +
              ( Math.sin( ( iy + count ) * 0.5 ) + 1 ) * 20;

      i += 3;
      j ++;

    }

  }

  particles.geometry.attributes.position.needsUpdate = true;
  particles.geometry.attributes.scale.needsUpdate = true;

  renderer.render( scene, camera );

  count += 0.1;

}
</script>