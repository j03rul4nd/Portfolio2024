---
import { readAll } from "../lib/markdoc/read";
import { project } from "../lib/markdoc/frontmatter.schema";
import PageLayout from "../layouts/PageLayout.astro";
import PageMeta from "../components/PageMeta.astro";
import { SITE_TITLE } from "../config";

const projects = await readAll({
  directory: "projects",
  frontmatterSchema: project,
});

const sortedProjects = projects
  .filter((p) => p.frontmatter.draft !== true)
  .sort(
    (a, b) =>
      new Date(b.frontmatter.date).valueOf() -
      new Date(a.frontmatter.date).valueOf()
  );
---

<PageLayout>
  <PageMeta title={`Projects | ${SITE_TITLE}`} slot="meta" />
  <section slot="main">
    <ul>
      {
        sortedProjects.map((project) => {
          const formattedDate = new Date(
            project.frontmatter.date
          ).toLocaleDateString("en-us", {
            year: "numeric",
            month: "short",
            day: "numeric",
          });
          return (
            // <li class="grid grid-cols-[1fr] md:grid-cols-[1fr_auto] mb-3 md:gap-2 items-start">
            //   <div class="title">
            //     <a
            //       href={project.frontmatter.url}
            //       target="_blank"
            //       class="unset hover:text-text-link"
            //     >
            //       <span>{project.frontmatter.title}</span>
            //       <span>
            //         <i class="ml-1 mr-1 text-[12px] pb-2 fa-solid fa-up-right-from-square" />
            //       </span>
            //     </a>
            //   </div>
            //   <div class="text-text-muted text-sm italic pt-1">
            //     <time datetime={project.frontmatter.date.toISOString()}>
            //       {formattedDate}
            //     </time>
            //   </div>

            // </li>





            
              

            <a href={project.frontmatter.url}
                target="_blank"
                class="flex justify-center	 h-auto max-w-full" 
                style="background-image: none">

                  <div class="sectionContentImgProjectsCover">
                    <img class="w-full h-auto max-w-xl rounded-lg shadow-xl dark:shadow-gray-800" 
                        src={project.frontmatter.ogImagePath}
                        alt="image description">

                    <div class="sectionhrefToLinkCoveProject">
                      <div class="sectionIconHoverprojects">
                        <div class="IconToLink">
                          <svg width="10" height="10" viewBox="0 0 10 10" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M3.25403 1.46875C2.83987 1.46875 2.5041 1.80446 2.50403 2.21862C2.50396 2.63289 2.83977 2.96875 3.25403 2.96875H5.94325L1.47358 7.43842C1.18068 7.73131 1.18068 8.20619 1.47358 8.49908C1.76647 8.79197 2.24134 8.79197 2.53424 8.49908L7.00299 4.03033L7.00314 6.71982C7.00316 7.13345 7.34024 7.46875 7.75387 7.46875C8.16752 7.46875 8.50108 7.13342 8.50108 6.71978V2.21875C8.50108 1.80454 8.16529 1.46875 7.75108 1.46875H3.25403Z" fill="white"></path></svg>
                        </div>
                      </div>
                    </div>
                  </div>
            </a>

            <div class="sectionDataInfo">
              
              <div class="sectionContentComponentCard" data-is-open="false">
                  <div class="titleContenteComponentCard">
                      <div class="TextContentCardTittle"> { project.frontmatter.title } </div>
                      <div class="btnMoreContent">
                          <div class="iconMoreContentAnimation">
                              <div class="icon-top"></div>
                              <div class="icon-bottom"></div>

                          </div>
                      </div>
                  </div>

                  <div class="captionCardContent">
                      { project.frontmatter.description }
                      <div class="text-text-muted text-sm italic pt-1">
                        <time datetime={project.frontmatter.date.toISOString()}>
                          {formattedDate}
                        </time>
                      </div>
                  </div>
              </div>


            </div>

            <style>  

              .sectionhrefToLinkCoveProject {
                  position: absolute;
                  display: flex;
                  /* background: red; */
                  width: 99%;
                  height: 99%;
                  z-index: 8;
                  top: 0;
                  border-radius: 1rem;
                  justify-content: flex-end;
                  align-content: flex-start;
                  flex-direction: row;
                  align-items: flex-start;
              }

              .sectionContentImgProjectsCover img{
                position: relative;
              }

              .IconToLink {
                  
                  width: 100%;
                  height: 100%;
                  z-index: 9;
                  display: flex;
                  top: 0;
                  flex-direction: row;
                  justify-content: center;
                  align-items: center;
              }
              .sectionIconHoverprojects {
                  display: flex;
                  background: #00000021;
                  background: rgba(255, 255, 255, 0.337);
                  border-radius: 0.8rem;
                  padding: 5px;
                  margin: 5px;
                  width: 24px;
                  height: 24px;
                  flex-direction: row;
                  align-items: center;
                  justify-content: center;
              }

                  .sectionContentImgProjectsCover {
                      position: relative;
                      border: 1px solid white;
                      border-radius: 1rem;
                      padding: 5px;
                  }      
                .TextContentCardTittle {
                    font-size: calc((2 - 1) * 1.2vw + 1rem);
                }
                .icon-top{
                    height: 1px;
                    background-color: #000000;
                    width: 24px;
                }
                .icon-bottom{
                    height: 1px;
                    transform: rotate(90deg);
                    background-color: #000000;
                    width: 24px;
                    transition: all 0.2s ease-in-out;
                }
                .sectionContentComponentCard[data-is-open="true"] .icon-bottom{
                    transform: rotate(0deg);
                    transition: all 0.2s ease-in-out;
                }
                .btnMoreContent {
                    display: flex;
                    align-items: center;
                    flex-direction: row;
                    justify-content: center;
                }
                
                .titleContenteComponentCard {
                     gap: 1rem;
                      display: flex;
                      flex-direction: row;
                      justify-content: space-between;
                      cursor: pointer; /* Agregamos el estilo de cursor para indicar que es clickeable */
                  }
          
                  .sectionContentComponentCard {
                      border-bottom: 1px solid #000000;
                      border-top: 1px solid #000000;
                      margin-bottom: 1rem;
                      margin-top: 1rem;
                      overflow: hidden; /* Evita que el contenido oculto afecte al diseño */
                      max-height: 1000px; /* Valor suficientemente grande para manejar el contenido variado */
                      transition: max-height 0.5s ease; /* Agregamos una transición suave de 0.5 segundos para la altura máxima */
                  }
          
                  .captionCardContent {
                      padding-top: 0px;
                      padding-bottom: 15px;
                      padding-left: 0px;
                      padding-right: 0px;
                      max-height: 0px; /* Por defecto, establecemos la altura máxima en 0 */
                      overflow: hidden; /* Ocultamos el contenido que excede la altura máxima */
                      opacity: 0; /* Por defecto, lo hacemos invisible */
                      transition: max-height 0.5s ease, opacity 0.5s ease; /* Agregamos transiciones para altura y opacidad */
                  }
                  .dark .sectionContentComponentCard {
                    border-bottom: 1px solid #ffffff;
                    border-top: 1px solid #ffffff;
                }
                .dark .icon-bottom, .dark .icon-top {
                    background-color: #ffffff;
                }

            </style>
                

          );
        })
      }
    </ul>
    <script>
      var allCardTitles = document.querySelectorAll(".titleContenteComponentCard");

allCardTitles.forEach(function(cardTitle) {
    cardTitle.addEventListener("click", function() {
        var captionCard = this.parentNode.querySelector('.captionCardContent');
        var sectionContentCard = this.closest('.sectionContentComponentCard');

        if (captionCard.style.maxHeight === "0px" || captionCard.style.maxHeight == "") {
            captionCard.style.maxHeight = captionCard.scrollHeight + "px";
            captionCard.style.opacity = "1";
            sectionContentCard.setAttribute("data-is-open", "true");
        } else {
            captionCard.style.maxHeight = "0";
            captionCard.style.opacity = "0";
            sectionContentCard.setAttribute("data-is-open", "false");
        }
    });
});
    </script>
  </section>
</PageLayout>
